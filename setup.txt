#NOTE FROM BEN: IN LIEU OF DOING ALL OF THIS, YOU MIGHT BE ABLE TO JUST RUN SETUP.SH (ALTHOUGH YOU’LL HAVE TO EDIT THE SETTINGS FILE BEFOREHAND, AS DESCRIBED BELOW)

install git and clone repo
$ sudo apt-get install git
$ git clone https://github.com/langcog/web-cdi.git
$ cd web-cdi

install dependencies
  on ubuntu:
    $ sudo apt-get python-pip python-dev postgresql-client postgresql postgresql-contrib pgadmin5 python-psycopg2 libpq-dev libxml2-dev libxslt-dev supervisor nginx
  on osx:
    install and start postgresql

#NOTE FROM BEN: YOU’LL NEED TO INSTALL HOMEBREW USING THE FOLLOWING COMMAND IF YOU DON’T ALREADY HAVE IT: /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

    $ brew install postgresql

#NOTE FROM BEN: IF YOU SHUT THE SERVER DOWN AND WANT TO RESTART, YOU HAVE TO DO SO USING THE LINE BELOW. 
    $ pg_ctl -D /usr/local/var/postgres/ -l /usr/local/var/postgres/server.log start
    [TODO: the rest]

install virtualenv and set one up
$ sudo pip install virtualenv

#NOTE FROM BEN: WE MIGHT WANT TO CLARIFY THAT YOU NEED TO REPLACE “my_project_folder” BELOW WITH THE ACTUAL NAME OF YOUR PROJECT FOLDER, WHICH SHOULD BE “webcdi”
$ cd my_project_folder
$ virtualenv venv
$ source venv/bin/activate

install project requirements
$ pip install -r requirements.txt

create postgres database/user ($username = your OSX login)
$ sudo -u $username createdb webcdi-admin

#THIS STEP ASKS YOU TO CREATE A PASSWORD. MINE IS XXXXXXXXXXX. 
$ sudo -u $username createuser -P -s webcdi-admin

#NOTE FROM BEN: THERE’S SOME WEIRD ESCAPING ISSUE GOING ON WITH THE COMMAND BELOW. YOU’LL HAVE TO SPLIT THIS UP INTO TWO COMMANDS: (1) $ psql -U $username webcdi-admin and [opens a psql session] (2) GRANT ALL PRIVILEGES ON DATABASE "webcdi-admin" TO "webcdi-admin"; [grants privileges and should give you a message saying “GRANT” if it’s worked correctly] 
$ psql -U $username webcdi-admin -c "GRANT ALL PRIVILEGES ON DATABASE "webcdi-admin" TO "webcdi-admin;"


#FOR THIS TO WORK, YOU MUST GO INTO settings.py AND COMMENT OUT THE LINE STARTING WITH LOGGING = { THROUGH THE FINAL CLOSING BRACKET AFTER ‘propagate’: True,
make and run migrations
$ python manage.py makemigrations
$ python manage.py migrate

set up instruments
$ sudo -u $username psql -d webcdi-admin -c "\\COPY cdi_forms_english_ws FROM 'cdi_form_csv/[English_WS].csv' WITH (FORMAT csv, HEADER True)"
$ sudo -u $username psql -d webcdi-admin -c "\\COPY cdi_forms_english_wg FROM 'cdi_form_csv/[English_WG].csv' WITH (FORMAT csv, HEADER True)"
[and so on for other instruments]

create login for admin console
$ python manage.py createsuperuser

run locally
$ python manage.py runserver

in the admin console (http://127.0.0.1:8000/admin) add instruments for English_WS, English_WG, etc.
